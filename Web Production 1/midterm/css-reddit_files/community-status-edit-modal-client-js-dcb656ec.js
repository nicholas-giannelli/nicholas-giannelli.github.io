import{i as t,c as e,_ as i,n as s,s as o,x as n,e as r,Q as a,J as l,d,f as c,az as m,$ as h,t as u,ac as p,ab as b,u as g,S as j,ad as f}from"./shell-e94b58e1.js";import{i as y}from"./rte-toolbar-button-emote-998acb54.js";import"./faceplate-bottom-sheet-6635ac01.js";import"./faceplate-search-input-902a4e97.js";import{R as E}from"./reddit-rte-ea70ee30.js";import{S,A as x,N as v}from"./community-status-telemetry-8bffca32.js";import{L as C}from"./mention-node-4237c79d.js";import"./shreddit-modal-content-0ef2cd3c.js";import"./rpl-dialog-19bc4d5f.js";import"./TinyGesture-32f2fddd.js";import"./faceplate-text-input-8d5dd4c4.js";import"./icon-search-outline-b008fc5a.js";import"./composer-2696e55b.js";import"./rtjsonToLexical-798d94c6.js";import"./rtjson-77078299.js";import"./index-6ea90507.js";import"./canonical-url-73c5da8c.js";import"./index-18b99d92.js";import"./icon-code-inline-outline-0b79003d.js";import"./icon-delete-outline-d5a96e4d.js";import"./icon-info-outline-b7a9baaa.js";import"./media-telemetry-observer-de08c240.js";import"./telemetry-event-struct-69015fe2.js";import"./icon-gif-post-outline-b06a42fc.js";import"./icon-play-fill-3ccd0053.js";import"./icon-settings-fill-89393c47.js";import"./index-523317a8.js";import"./when-4042a907.js";import"./icon-spoiler-outline-594d2c11.js";import"./icon-add-outline-90dbf27f.js";import"./icon-link-outline-5c46bae9.js";import"./icon-list-bulleted-outline-967e23f3.js";import"./icon-italic-outline-23441470.js";import"./icon-edit-outline-0df6a915.js";import"./upload-to-s3-d23260d1.js";class I{constructor(t){this.emojiListItem=t}isVisible(){return"none"!==this.emojiListItem.style.display}getName(){return this.emojiListItem.dataset.token||""}getUrl(){return this.emojiListItem.dataset.url||""}setVisibility(t){this.emojiListItem.style.display=t?"":"none"}}let w=class extends o{constructor(){super(...arguments),this.emojis=[],this.hasVisibleEmoji=!1,this.onEmojiClick=t=>{const e=t.composedPath().find((t=>t instanceof HTMLLIElement));if(e instanceof HTMLLIElement){const t=new I(e);this.dispatchEvent(new CustomEvent("select",{detail:{name:t.getName(),url:t.getUrl()},bubbles:!0}))}},this.onEmojiKeyDown=t=>{"Enter"===t.code&&this.onEmojiClick(t)}}firstUpdated(){this.emojis=this.getEmojis(),this.hasVisibleEmoji=this.emojis.some((t=>t.isVisible()))}filterEmojis(t){const e=t.toLowerCase();let i=!1;this.emojis.forEach((t=>{const s=t.getName().toLowerCase().includes(e);t.setVisibility(s),i=i||s})),this.hasVisibleEmoji=i}getEmoji(t){const e=this.emojis.find((e=>e.getName()===t));return e?{name:e.getName(),url:e.getUrl()}:null}getEmojis(){return(this.shadowRoot?.querySelector("#emojis")?.assignedNodes()||[]).filter((t=>t instanceof HTMLLIElement)).map((t=>new I(t)))}render(){return n`\n <p class="text-12 font-semibold text-neutral-content-weak uppercase mt-0 mb-xs mx-2xs">\n <slot name="group-name"></slot>\n </p>\n\n \n <ul class="list-none p-0 m-0 grid grid-cols-6 gap-xs justify-items-center">\n <slot id="emojis" @click="${this.onEmojiClick}" @keydown="${this.onEmojiKeyDown}"></slot>\n </ul>\n `}};w.styles=[t`:host{display:block}:host(:not([has-visible-emoji])){display:none}`,e],i([s({type:Boolean,reflect:!0,attribute:"has-visible-emoji"})],w.prototype,"hasVisibleEmoji",void 0),w=i([r("emoji-group")],w);let T=class extends o{getEmoji(t){if(!this.emojiGroups)return null;for(const e of this.emojiGroups){const i=e.getEmoji(t);if(i)return i}return null}onSearchInput(t){if(!this.emojiGroups)return;const e=t.target.value.toLowerCase();this.emojiGroups.forEach((t=>{t.filterEmojis(e)}))}onClearFilter(){this.searchInput&&(this.searchInput.value="",this.searchInput.focus()),this.emojiGroups&&this.emojiGroups.forEach((t=>{t.filterEmojis("")}))}renderSearchInput(){return n`\n <faceplate-search-input \n class="mx-0 mt-0 w-full px-[var(--list-padding)] box-border" \n appearance="secondary" \n placeholder="Search" \n @input="${this.onSearchInput}" \n @click="${t=>t.stopPropagation()}" \n>\n ${d({attributes:{id:"emoji-list-search-clear",slot:"clearIcon",type:"button",onclick:this.onClearFilter},appearance:"plain",size:c.Small,screenReaderContent:"Clear search",leadingIcon:m({size:h.Small})})}\n </faceplate-search-input>\n `}render(){return n`\n ${this.renderSearchInput()}\n <div class="h-[var(--list-height)] px-[var(--list-padding)] overflow-y-auto">\n <slot></slot>\n </div>\n `}};T.styles=[t`:host{display:block;--list-height:auto;--list-padding:0}`,e],i([a({flatten:!0})],T.prototype,"emojiGroups",void 0),i([l("faceplate-search-input",!0)],T.prototype,"searchInput",void 0),T=i([r("emoji-list")],T);let k=class extends o{constructor(){super(...arguments),this.position="bottom-start",this.name="",this.isMobile=!1,this.emojiUrl="",this.onEmojiSelect=t=>{const{url:e,name:i}=t.detail;e&&(this.name=i,this.emojiUrl=e,this.closeBottomSheet())},this.openBottomSheet=()=>{this.bottomSheet?.showModal()},this.closeBottomSheet=()=>{this.bottomSheet?.close()}}firstUpdated(){requestAnimationFrame((()=>{this.name&&this.emojiList&&(this.emojiUrl=this.emojiList.getEmoji(this.name)?.url||"")}))}renderIcon(){return this.emojiUrl?n`\n <img src="${this.emojiUrl}" class="object-contain" alt="Emoji" height="20px" width="20px">\n `:y({attributes:{className:"text-neutral-content-strong"}})}renderDesktop(){return n`\n <faceplate-dropdown-menu position="${this.position}">\n ${d({appearance:"plain",leadingIcon:this.renderIcon(),attributes:{className:"trigger-btn"}})}\n\n <div \n slot="menu" \n class="bg-neutral-background rounded-[14px] pb-sm w-[336px] overflow-hidden" \n>\n <div class="h-[374px] px-md pt-lg pb-md overflow-y-scroll">\n <h3 class="text-center text-18 font-bold m-0 mb-lg">\n <slot name="header"></slot>\n </h3>\n\n <emoji-list class="w-full" @select="${this.onEmojiSelect}">\n <slot></slot>\n </emoji-list>\n </div>\n\n <div \n class="px-md pt-sm border-t-solid border-neutral-border border-0 border-t-[1px] border-solid" \n>\n <slot name="footer"></slot>\n </div>\n </div>\n </faceplate-dropdown-menu>\n `}renderMobile(){return n`\n ${d({appearance:"plain",leadingIcon:this.renderIcon(),attributes:{onclick:this.openBottomSheet,className:"trigger-btn"}})}\n\n <faceplate-bottom-sheet>\n <h3 slot="header" class="text-18 font-bold m-0 mt-lg mb-lg">\n <slot name="header"></slot>\n </h3>\n\n <div class="w-full pb-md">\n <emoji-list \n class="w-full" \n style="--list-height:224px;--list-padding:16px" \n @select="${this.onEmojiSelect}" \n>\n <slot></slot>\n </emoji-list>\n\n <div \n class="pt-sm mx-md border-t-solid border-neutral-border border-0 border-t-[1px] border-solid" \n>\n <slot name="footer"></slot>\n </div>\n </div>\n </faceplate-bottom-sheet>\n `}render(){return this.isMobile?this.renderMobile():this.renderDesktop()}};k.styles=[e],i([s({type:String})],k.prototype,"position",void 0),i([s({type:String})],k.prototype,"name",void 0),i([s({type:Boolean,attribute:"mobile"})],k.prototype,"isMobile",void 0),i([u()],k.prototype,"emojiUrl",void 0),i([l("emoji-list")],k.prototype,"emojiList",void 0),i([l("faceplate-bottom-sheet")],k.prototype,"bottomSheet",void 0),k=i([r("emoji-selector")],k);let L=b;function N(t){return t?.[0]?.message??"Something went wrong"}let $=class extends o{constructor(){super(...arguments),this.dialogId="",this.subredditId="",this.subredditName="",this.hadInitialValue=!1,this.charCount=0,this.emojiName="",this.isTouched=!1,this.dirty=!1,this.isLoading=!1,this.unsubscribeFns=[],this.close=()=>{if(this.dialogId){document.getElementById(this.dialogId)?.hide()}},this.setTouched=()=>(this.isTouched=!0,!1),this.handleInput=t=>{this.isTouched=!0,this.charCount=t.length},this.handleBlur=()=>(this.dirty=!0,!1),this.onEmojiSelect=t=>{this.isTouched=!0,this.emojiName=t.detail.name},this.updateCommunityStatus=async()=>{if(this.isLoading)return;const t=this.getEditorElement();if(!t)return;const e=t?.getRTJSON(),i=this.emojiName;if(!e||!i)return;const s={subredditId:this.subredditId,emojiId:i,description:{richText:JSON.stringify(e)}};try{this.isLoading=!0,await this._updateCommunityStatusMutation(s),this._reloadPage()}catch(t){this.isLoading=!1,this.showErrorAlert("Unable to update community status")}},this.clearCommunityStatus=async()=>{if(this.isLoading)return;if(!this.getEditorElement())return;const t={subredditId:this.subredditId,emojiId:""};try{this.isLoading=!0,await this._updateCommunityStatusMutation(t),this._reloadPage()}catch(t){this.isLoading=!1,this.showErrorAlert("Unable to clear community status")}}}connectedCallback(){super.connectedCallback(),requestAnimationFrame((()=>{const t=this.getEditorElement()?.getEditor();t&&(this.setInitialCharCount(t),this.setInitialEmoji(),this.setEditorListeners(t),this.getEmojiSelectorElement()?.addEventListener("select",this.onEmojiSelect))}))}disconnectedCallback(){super.disconnectedCallback(),this.unsubscribeFns.forEach((t=>t())),this.unsubscribeFns=[],this.getEmojiSelectorElement()?.removeEventListener("select",this.onEmojiSelect)}canApplyChanges(){return this.charCount>0&&!this.isStatusTooLong()&&!!this.emojiName}isStatusTooLong(){return this.charCount>250}isEmojiMissing(){return this.dirty&&!this.emojiName}hasErrors(){return this.isStatusTooLong()||this.isEmojiMissing()}canClearStatus(){return this.hadInitialValue&&!this.isTouched}setEditorListeners(t){const e=t?.registerTextContentListener(this.handleInput),i=t?.registerCommand(C.FORMAT_TEXT_COMMAND,this.setTouched,C.COMMAND_PRIORITY_NORMAL),s=t?.registerCommand(C.BLUR_COMMAND,this.handleBlur,C.COMMAND_PRIORITY_NORMAL);this.unsubscribeFns.push(e,i,s)}setInitialEmoji(){const t=this.getEmojiSelectorElement();t&&(this.emojiName=t.name||"")}setInitialCharCount(t){const e=t?.getEditorState().read((()=>C.$getRoot().getTextContent()))||"";this.charCount=e.length,this.hadInitialValue=e.length>0}getEditorElement(){return(this.shadowRoot?.querySelector("#editor")?.assignedNodes({flatten:!0})||[]).find((t=>t instanceof E))}getEmojiSelectorElement(){return(this.shadowRoot?.querySelector('slot[name="emoji-selector"]')?.assignedNodes({flatten:!0})||[]).find((t=>t instanceof k))}async _updateCommunityStatusMutation(t){return async function(t){const e={input:t},{data:i,errors:s}=await L({operation:p.UpdateCommunityStatus,variables:e});if(s?.length)throw new Error(N(s));const{updateSubredditCommunityStatus:o}=i;if(!o?.ok)throw new Error(N(o?.errors))}(t)}_reloadPage(){window.location.reload()}getTrackingContext(){return JSON.stringify({subreddit:{id:this.subredditId,name:this.subredditName}})}showErrorAlert(t){const e=g("faceplate-alert",{level:j.error,message:t});this.dispatchEvent(e)}withTracker(t,e,i){return n`\n <faceplate-tracker \n slot="${t}" \n source="${S.MODERATOR}" \n action="${x.CLICK}" \n noun="${e}" \n data-faceplate-tracking-context="${this.getTrackingContext()}" \n>\n ${i}\n </faceplate-tracker>\n `}renderApplyButton(){return this.withTracker("primaryButton",this.hadInitialValue?v.STATUS_EDIT:v.STATUS_CREATE,d({appearance:"primary",attributes:{disabled:!this.canApplyChanges()||this.isLoading,onclick:this.updateCommunityStatus},size:c.Medium,children:"Apply"}))}renderClearStatusButton(){return this.withTracker("primaryButton",v.STATUS_DELETE,d({appearance:"secondary",attributes:{disabled:this.isLoading,onclick:this.clearCommunityStatus},size:c.Medium,children:"Clear Status"}))}renderPrimaryButton(){return this.canClearStatus()?this.renderClearStatusButton():this.renderApplyButton()}renderCancelButton(){return this.withTracker("secondaryButton",v.STATUS_CANCEL,d({appearance:"secondary",attributes:{onclick:this.close},size:c.Medium,children:"Cancel"}))}renderCloseButton(){return this.withTracker("closeButton",v.STATUS_CANCEL,d({appearance:"secondary",leadingIcon:f({size:h.Small,attributes:{className:"inline-flex"}}),attributes:{onclick:this.close},size:c.Small}))}render(){return n`\n <shreddit-modal-content overflow-visible no-padding-content blocking class="max-w-[370px]">\n <span slot="title" class="pb-0 p-md box-border w-[322px]">\n Add a community status\n </span>\n\n <div class="flex flex-col font-normal">\n <faceplate-tracker \n source="${S.MODERATOR}" \n action="${x.VIEW}" \n noun="${v.STATUS_EDIT}" \n data-faceplate-tracking-context="${this.getTrackingContext()}" \n>\n <p class="text-14 text-neutral-content-weak m-0">\n Let the community know something special is happening.\n </p>\n </faceplate-tracker>\n\n <div \n class="grid editor-grid mt-md pt-[12px] rounded-[1.25rem] border-sm border-solid ${this.hasErrors()?"border-danger-background":"border-transparent"}" \n>\n <div class="flex justify-end pt-[2px]">\n <slot name="emoji-selector"></slot>\n </div>\n <slot id="editor"></slot>\n </div>\n\n ${this.isEmojiMissing()?n`\n <div class="flex justify-between text-12 mb-0 mt-2xs px-md text-danger-background">\n <span id="no-emoji-error">\n A community emoji is required\n </span>\n </div>\n `:n`\n <div \n class="flex justify-between text-12 mb-0 mt-2xs px-md ${this.isStatusTooLong()?"text-danger-background":"text-neutral-content-weak"}" \n>\n <span id="too-long-status-error">\n ${this.isStatusTooLong()?"Must be 250 characters or less.":""}\n </span>\n\n <span id="char-count" class="justify-self-end" \n>${this.charCount} / ${250}</span>\n </div>\n `}\n </div>\n\n ${this.renderPrimaryButton()} ${this.canClearStatus()?"":this.renderCancelButton()}\n ${this.renderCloseButton()}\n </shreddit-modal-content>\n `}};$.styles=[t`.editor-grid{grid-template-columns:48px 1fr;background-color:var(--color-input-secondary)}.editor-grid:hover{background-color:var(--color-input-secondary-hover)}`,e],i([s({type:String,attribute:"dialog-id"})],$.prototype,"dialogId",void 0),i([s({type:String,attribute:"subreddit-id"})],$.prototype,"subredditId",void 0),i([s({type:String,attribute:"subreddit-name"})],$.prototype,"subredditName",void 0),i([u()],$.prototype,"hadInitialValue",void 0),i([u()],$.prototype,"charCount",void 0),i([u()],$.prototype,"emojiName",void 0),i([u()],$.prototype,"isTouched",void 0),i([u()],$.prototype,"dirty",void 0),i([u()],$.prototype,"isLoading",void 0),$=i([r("community-status-edit-modal")],$);
//# sourceMappingURL=community-status-edit-modal-client-js-dcb656ec.js.map
