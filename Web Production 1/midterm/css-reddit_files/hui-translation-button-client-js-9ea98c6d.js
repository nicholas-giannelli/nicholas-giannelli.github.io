import{q as t,c as a,_ as n,n as i,ca as e,t as s,J as o,s as l,cc as r,x as c,$ as h,d as p,f as d,ad as u,aq as m,ar as v,cb as k,e as C}from"./shell-e94b58e1.js";import{S as x}from"./faceplate-switch-input-2dded8eb.js";import{i as f}from"./icon-info-fill-44304797.js";import{I as b}from"./icon-translate-outline-4e8cb09d.js";import{t as w,a as g,b as M,c as T,d as A,e as $,f as y,g as V}from"./translation-f7d1391f.js";import"./checked-input-element-53a61642.js";const D=t(l);let E=class extends D{constructor(){super(...arguments),this.isDesktop=!1,this.translationContextValue=r,this.shouldShowCoachmark=!0,this.translationActiveMsg="Translation active",this.handleTranslationActiveSwitch=()=>{const t=!this.translationContextValue.isTranslationActive;this.dispatchContextUpdateEvent({isTranslationActive:t})},this.closeTranslationCoachmark=()=>{this.translationCoachmark?.close?.(),setTimeout((()=>{this.dispatchContextUpdateEvent({shouldDisplayCoachmark:!1})}),500)},this.openTranslationCoachmark=()=>{this.trackEvent(w(this.translationContextValue.isTranslationActive));const{coachmarkDisplayCount:t}=this.translationContextValue;this.dispatchContextUpdateEvent({coachmarkDisplayCount:t+1,shouldDisplayCoachmark:t<3}),this.translationCoachmark?.show?.()},this.openTranslationMenu=()=>{this.trackEvent(g(this.translationContextValue.isTranslationActive)),this.isDesktop?this.translationDropdownMenu?.show?.():this.translationMenuBottomSheet?.showModal?.()},this.handleCoachmarkSettingsClick=()=>{this.closeTranslationCoachmark(),this.openTranslationMenu(),this.trackEvent(M(T.UpdateSettings))},this.handleTranslationActiveClick=t=>{t.stopPropagation(),this.trackEvent(A(this.translationContextValue.isTranslationActive))},this.handleTooltipClick=t=>{t.stopPropagation()},this.handleCoachmarkCloseClick=()=>{this.closeTranslationCoachmark(),this.trackEvent(M(T.Dismiss))},this.handleNavMobileButtonClick=()=>{this.openTranslationMenu(),this.trackEvent($(this.translationContextValue.isTranslationActive))},this.handleNavbarButtonClick=()=>{this.trackEvent($(this.translationContextValue.isTranslationActive)),this.trackEvent(g(this.translationContextValue.isTranslationActive))},this.handleNavigationButtonClose=t=>{t.stopPropagation(),this.trackEvent(y(this.translationContextValue.isTranslationActive))}}connectedCallback(){super.connectedCallback(),this.trackEvent(V(this.translationContextValue.isTranslationActive)),window.setTimeout((()=>{this.shouldShowCoachmark&&this.translationContextValue.shouldDisplayCoachmark&&this.openTranslationCoachmark()}),500)}dispatchContextUpdateEvent(t){const a={...this.translationContextValue,...t},n=new CustomEvent("update-translation-context",{bubbles:!0,composed:!0,detail:a});this.dispatchEvent(n)}renderCoachmark(){return c`<div class="flex flex-col">\n <div class="flex flex-row flex-nowrap items-start">\n <div class="flex-shrink flex-grow-0 pt-xs pl-xs mr-xs">\n ${f({size:h.Small})}\n </div>\n <div class="flex flex-col flex-grow flex-shrink-0 pt-xs items-start">\n <h3 class="mt-0 text-14">${this.translationActiveMsg}</h3>\n <p class="mt-0 max-w-[10rem] xs:max-w-none">\n ${this.translationContextValue.isTranslationActive?"Posts and comments are automatically translated":"Automatically translate posts and comments"}\n </p>\n </div>\n <div class="flex-shrink flex-grow-0">\n ${p({size:d.Medium,appearance:"plainInverted",shape:"pill",leadingIcon:u({size:h.Small}),attributes:{"aria-label":"Close",id:"coachmark-close-button",onclick:this.handleCoachmarkCloseClick}})}\n </div>\n </div>\n <div class="flex flex-nowrap gap-xs justify-end">\n ${p({children:"Settings",size:d.Medium,appearance:"plainInverted",shape:"pill",attributes:{id:"coachmark-settings-button",onclick:this.handleCoachmarkSettingsClick}})}\n </div>\n </div>`}renderDesktopMenu(){return c`<faceplate-dropdown-menu \n position="bottom-end" \n id="translation-desktop-menu" \n .onclose="${this.handleNavigationButtonClose}" \n>\n ${p({size:d.Medium,appearance:"plain",shape:"pill",leadingIcon:b({size:h.Medium}),attributes:{id:"translation-menu-button","aria-label":this.translationActiveMsg,onclick:this.handleNavbarButtonClick}})}\n <faceplate-menu slot="menu" dropdown>\n ${m({label:c`\n <faceplate-switch-input \n id="hui-translation-switch" \n appearance="${x.PRIMARY}" \n class="inline-flex flex-row-reverse gap-sm" \n ?checked="${this.translationContextValue.isTranslationActive}" \n @input="${this.handleTranslationActiveSwitch}" \n @click="${this.handleTranslationActiveClick}" \n>\n ${this.translationActiveMsg}\n </faceplate-switch-input>\n `,size:v.Medium})}\n </faceplate-menu>\n </faceplate-dropdown-menu>`}renderMobileMenu(){return c`<div>\n ${p({size:d.Medium,appearance:"plain",shape:"pill",leadingIcon:b({size:h.Medium}),attributes:{id:"translation-menu-button",onclick:this.handleNavMobileButtonClick,"aria-label":this.translationActiveMsg}})}\n <faceplate-bottom-sheet \n id="translation-mobile-menu" \n @faceplate-close="${this.handleNavigationButtonClose}" \n>\n <div class="p-md flex flex-col items-stretch w-full">\n <faceplate-switch-input \n id="hui-translation-switch" \n appearance="${x.PRIMARY}" \n class="flex flex-row-reverse justify-between gap-sm px-xs" \n ?checked="${this.translationContextValue.isTranslationActive}" \n @input="${this.handleTranslationActiveSwitch}" \n @click="${this.handleTranslationActiveClick}" \n>\n <span class="inline-flex items-center gap-xs">\n ${b({size:h.Medium})}\n <span> ${this.translationActiveMsg} </span>\n </span>\n </faceplate-switch-input>\n </div>\n </faceplate-bottom-sheet>\n </div>`}render(){const{shouldDisplayCoachmark:t}=this.translationContextValue;return c`<faceplate-tooltip \n position="${t&&this.isDesktop?"bottom-end":"bottom"}" \n appearance="inverted" \n id="translation-coachmark-tooltip" \n trigger-event="${t?"none":"hover"}" \n @click="${this.handleTooltipClick}" \n>\n <div slot="trigger">\n ${this.isDesktop?this.renderDesktopMenu():this.renderMobileMenu()}\n </div>\n ${t?this.renderCoachmark():"Open translation menu"}\n </faceplate-tooltip>`}};E.styles=[a],n([i({type:Boolean,attribute:"is-desktop"})],E.prototype,"isDesktop",void 0),n([e({context:k,subscribe:!0}),s()],E.prototype,"translationContextValue",void 0),n([s()],E.prototype,"shouldShowCoachmark",void 0),n([o("#translation-coachmark-tooltip")],E.prototype,"translationCoachmark",void 0),n([o("#translation-desktop-menu")],E.prototype,"translationDropdownMenu",void 0),n([o("#translation-mobile-menu")],E.prototype,"translationMenuBottomSheet",void 0),E=n([C("hui-translation-button")],E);
//# sourceMappingURL=hui-translation-button-client-js-9ea98c6d.js.map
