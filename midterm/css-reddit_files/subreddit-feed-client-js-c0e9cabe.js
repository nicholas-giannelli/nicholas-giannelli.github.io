import"./shreddit-feed-06f55481.js";import"./reddit-page-data-a24b7cda.js";import"./shreddit-share-list-item-e9f82776.js";import{j as t,_ as e,t as i,s,e as n,c as o,p as r,cs as a,x as d,n as c,f as u,$ as b,a3 as p,d as h}from"./shell-e94b58e1.js";import"./open-interstitial-modal-61012a32.js";import"./confirm-over-18-e6b85d2f.js";import"./faceplate-auto-height-animator-be04189a.js";import"./guard-community-modal-937e536b.js";import"./faceplate-text-input-8d5dd4c4.js";import"./community-appearance-entrypoint-6a13999a.js";import"./user-mod-actions-bottom-sheet-f69ce876.js";import"./community-status-bottom-sheet-3e6fece8.js";import"./throttle-cde4a556.js";import"./index-3727c879.js";import"./index-6f1b0f36.js";import"./index-8ab0123a.js";import"./index-d142f15a.js";import"./icon-privacy-outline-65e6da47.js";import"./icon-edit-outline-0df6a915.js";import"./faceplate-switch-input-2dded8eb.js";import"./checked-input-element-53a61642.js";import"./shreddit-pubsub-publisher-d2c8cf21.js";import"./faceplate-bottom-sheet-6635ac01.js";import"./TinyGesture-32f2fddd.js";import"./faceplate-bottom-sheet-header-2e304719.js";import"./user-mod-actions-ef8136ab.js";import"./community-status-telemetry-8bffca32.js";const m=t(s);let l=class extends m{constructor(){super(...arguments),this.bannerEventData=null}static get styles(){return[o]}connectedCallback(){super.connectedCallback(),this.subscribe(r.TriggerFeedErrorBanner,(t=>{t.type===a.Show?this.bannerEventData=t.data??null:this.bannerEventData=null}))}render(){if(!this.bannerEventData)return"";const{multiLine:t,msg:e,appearance:i,shape:s,className:n,children:o}=this.bannerEventData;return d` <faceplate-banner \n class="${n}" \n ?multiLine="${t}" \n appearance="${i}" \n shape="${s}" \n msg="${e}" \n>\n ${o}\n </faceplate-banner>`}};e([i()],l.prototype,"bannerEventData",void 0),l=e([n("shreddit-feed-error-banner")],l);const f=t(s);let y=class extends f{constructor(){super(...arguments),this.name="",this.subredditId="",this.prefixedName="",this.notificationLevel="",this.isModerator=!1,this.isSubscribed=!1,this.isMuted=!1,this.isFavorite=!1,this.isUserLoggedIn=!1,this.hasCustomActions=!1,this.buttonSize=u.Small,this.iconSize=b.Small,this.onSubscriptionChange=t=>{this.name===t.name&&(this.isSubscribed=t.subscribed)}}static get styles(){return[o]}firstUpdated(){this.subscribe(r.SubredditSubscriptionChange,this.onSubscriptionChange)}disconnectedCallback(){super.disconnectedCallback(),this.unsubscribe(r.SubredditSubscriptionChange,this.onSubscriptionChange)}render(){return d` <div class="flex items-center gap-sm">\n ${this.isSubscribed?d`<shreddit-notification-frequency-control \n subreddit-id="${this.subredditId}" \n notification-level="${this.notificationLevel}" \n button-size="${this.buttonSize}" \n icon-size="${this.iconSize}" \n></shreddit-notification-frequency-control>`:p}\n ${this.isModerator?h({appearance:"primary",size:this.buttonSize,attributes:{href:`/${this.prefixedName}/about/modqueue`,className:"modtools-btn"},children:"Mod Tools"}):d`<faceplate-tracker \n source="community" \n action="click" \n noun="${this.isSubscribed?"unsubscribe":"subscribe"}" \n>\n <shreddit-join-button \n name="${this.name}" \n subreddit-id="${this.subredditId}" \n button-classes="px-sm py-xs" \n buttonsize="${this.buttonSize===u.Medium?"medium":"small"}" \n subscribe-label="Join" \n unsubscribe-label="Joined" \n unsubscribe-button-type-override="bordered" \n ?subscribed="${this.isSubscribed}" \n></shreddit-join-button></faceplate-tracker>`}\n ${this.isUserLoggedIn||this.hasCustomActions?d`<shreddit-subreddit-overflow-control \n name="${this.name}" \n prefixed-name="${this.prefixedName}" \n subreddit-id="${this.subredditId}" \n button-size="${this.buttonSize}" \n icon-size="${this.iconSize}" \n ?is-muted="${this.isMuted}" \n ?is-favorite="${this.isFavorite}" \n ?subscribed="${this.isSubscribed}" \n ?show-join-button="${this.isModerator}" \n ?is-user-logged-in="${this.isUserLoggedIn}" \n>\n <slot name="devvit-actions" slot="devvit-actions"></slot>\n </shreddit-subreddit-overflow-control>`:p}\n </div>`}};e([c({type:String})],y.prototype,"name",void 0),e([c({type:String,attribute:"subreddit-id"})],y.prototype,"subredditId",void 0),e([c({type:String,attribute:"prefixed-name"})],y.prototype,"prefixedName",void 0),e([c({type:String,attribute:"notification-level"})],y.prototype,"notificationLevel",void 0),e([c({type:Boolean,attribute:"is-moderator"})],y.prototype,"isModerator",void 0),e([c({type:Boolean,attribute:"is-subscribed"})],y.prototype,"isSubscribed",void 0),e([c({type:Boolean,attribute:"is-muted"})],y.prototype,"isMuted",void 0),e([c({type:Boolean,attribute:"is-favorite"})],y.prototype,"isFavorite",void 0),e([c({type:Boolean,attribute:"is-user-logged-in"})],y.prototype,"isUserLoggedIn",void 0),e([c({type:Boolean,attribute:"has-custom-actions"})],y.prototype,"hasCustomActions",void 0),e([c({type:String,attribute:"button-size"})],y.prototype,"buttonSize",void 0),e([c({type:String,attribute:"icon-size"})],y.prototype,"iconSize",void 0),y=e([n("shreddit-subreddit-header-buttons")],y);
//# sourceMappingURL=subreddit-feed-client-js-c0e9cabe.js.map
