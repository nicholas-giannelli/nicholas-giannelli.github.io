import{q as t,E as e,eD as s,cp as i,c8 as a,S as o,u as l,ab as n,ac as d,r,x as u,d as c,ad as h,$ as p,f as v,a0 as m,c as b,_ as y,t as S,J as w,s as f,e as _}from"./shell-e94b58e1.js";import{a as g}from"./settingsLabels-850aff28.js";let C=class extends(t(f)){constructor(){super(...arguments),this.isLoading=!0,this.isSubmittable=!1,this.postId="",this._windowEvents=new e(this,(()=>window)),this.handleOpenModalEvent=this._windowEvents.define(s,(async t=>{this.isSubmittable=!1,this.isLoading=!0,this.showModal(),await this.activateFormContentFeature(t.detail.postId),this.postId=t.detail.postId,this.isLoading=!1}))}activateFormContentFeature(t){return i({name:"post-level-crowd-control-form-content",routeParams:{postId:t},renderMode:a.Contents})}showModal(){this.modal?.showModal()}closeModal(){this.modal?.close()}buildAlert(t){const e=t?o.success:o.error;return this.dispatchEvent(l("faceplate-alert",{level:e,message:g(t)}))}async onSave(){const t=this.querySelector('[name="post-level"][checked]'),e=this.querySelector('[name="is-filter-enabled"]');t?.value&&e?(this.submitRequest(t.value,null!=e.value),this.emitV2Event(t.value,null!=e.value)):(this.buildAlert(!1),this.isSubmittable=!0)}async submitRequest(t,e){try{this.isSubmittable=!1;const s=await this.invokeGQL(t,e);this.inspectResp(s)}catch(t){this.buildAlert(!1),this.isSubmittable=!0}}invokeGQL(t,e){return n({operation:d.UpdatePostLevelCrowdControlSettings,variables:{id:this.postId,level:t,filterIsEnabled:e}})}inspectResp(t){t.data.updatePostCrowdControlFilter?.ok&&t.data.updatePostCrowdControlLevel?.ok?(this.buildAlert(!0),this.closeModal()):(this.buildAlert(!1),this.isSubmittable=!0)}isContentLoading(){return this.isLoading}emitV2Event(t,e){const s=this.querySelector('[name="subreddit-id"]'),i=this.querySelector('[name="subreddit-name"]'),a={id:s?.value||"",name:i?.value||""},o=this.querySelector('[name="author-id"]'),l={id:this.postId,author:{id:o?.value||""}},n=this.querySelector('[name="old-post-level"]');this.buildAndTrack("crowd_control_individual_post",l,a,{value:t,old_value:`${n?.value}`});const d=this.querySelector('[name="old-is-filter-enabled"]');this.buildAndTrack("crowd_control_individual_post_filter",l,a,{value:`${e}`,old_value:`${d?.value}`})}buildAndTrack(t,e,s,i){const a=r({source:"post_mod_action_menu",action:"save",noun:t},{post:e,subreddit:s,setting:i});this.trackEvent(a)}handleInput(){this.isSubmittable=!0}render(){return u`\n <faceplate-modal inFocusTrap class="max-w-md w-full">\n <div slot="title">\n Adjust Crowd Control\n </div>\n\n <div slot="closeButton">\n ${c({appearance:"secondary",leadingIcon:h({size:p.Small}),size:v.Small,attributes:{type:"button",onclick:this.closeModal}})}\n </div>\n\n <slot \n name="${m(this.isLoading?"loading":void 0)}" \n @input="${this.handleInput}" \n></slot>\n\n <div slot="primaryButton">\n ${c({children:"Save",appearance:"primary",attributes:{type:"submit",onclick:this.onSave,disabled:!this.isSubmittable}})}\n </div>\n\n <div slot="secondaryButton">\n ${c({children:"Cancel",appearance:"plain",attributes:{type:"button",onclick:this.closeModal}})}\n </div>\n </faceplate-modal>\n `}};C.styles=[b],y([S()],C.prototype,"isLoading",void 0),y([S()],C.prototype,"isSubmittable",void 0),y([S()],C.prototype,"postId",void 0),y([w("faceplate-modal")],C.prototype,"modal",void 0),C=y([_("post-level-crowd-control-modal")],C);
//# sourceMappingURL=post-level-crowd-control-client-js-f5d65ad1.js.map
